name: flask-ci

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  checks: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
        env:
          PYTHONPATH: ${{ github.workspace }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Create Test Results Directory
        run: mkdir -p test-results
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Check for test files
        id: check_tests
        run: |
          echo "::set-output name=has_tests::$(find . -name 'test_*.py' | wc -l)"
      - name: Test with pytest
        if: steps.check_tests.outputs.has_tests != '0'
        run: |
          pytest --junitxml=test-results/results.xml
      - name: Publish test results as PR comment
        if: steps.check_tests.outputs.has_tests != '0'
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: 'test-results/results.xml'
          check_name: 'Unit Tests Results'
      - name: Comment on PR for failed test lines
        if: steps.check_tests.outputs.has_tests != '0'
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'test-results/results.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
